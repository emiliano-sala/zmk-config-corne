/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ {

        behaviors {
          tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";                                                                                                                            
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
          }; 
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC / PRINTSCR |
// | SHFT  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  / RALT     |
// | LCTRL |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  |  BKSP          |
//                    | GUI | LWR | SPC |   | RALT | RSE  | LALT |
                        bindings = <
   &tp TAB    &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &tp PSCRN ESC
   &kp LSHFT  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &tp RALT SQT
   &kp LCTRL  &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSPC
                  &kp LGUI &mo 1 &kp SPACE   &kp RET &mo 2 &kp LALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |   |  !  |  @  |  #  |  $  |    %     |   |  ^  |  &  |  *  |  (  |  )  |   \   |
// |   |  1  |  2  |  3  |  4  |    5     |   |  -  |  =  |  `  |  [  |  ]  |  "|"  |
// |   |  6  |  7  |  8  |  9  |    0     |   |  _  |  +  |  ~  |  {  |  }  | RSHFT |
//                     |    |    | ENT |   |  | BKSP |    |
                        bindings = <
   &trans &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET  &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSLH
   &trans &kp N1   &kp N2   &kp N3   &kp N4   &kp N5      &kp MINUS  &kp EQUAL &kp GRAVE       &kp LBKT &kp RBKT &kp PIPE
   &trans &kp N6   &kp N7   &kp N8   &kp N9   &kp N0      &kp UNDER  &kp PLUS  &kp TILDE       &kp LBRC &kp RBRC &kp RSHFT
                         &trans &trans &kp RET     &trans &kp BSPC  &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | F1    |  F2  |  F3  |  F4   |  F5   |  F6        |   |  F7   |  F8    |  F9   |  F10 | F11  |  F12 |
// |       | Prev | Next | Vol - | Vol + | Play/Pause |   |  LFT  |  DWN   |  UP   |  RGT |      |  DEL |
// |  BTCLR| BT1  | BT2  | BT3   | BT4   | BT5        |   |  HOME |  PG_DN | PG_UP |  END |      |      |
//                    |     |   LALT  | HYPER   |                  |     |     |     |
                        bindings = <
   &kp F1      &kp F2        &kp F3       &kp F4       &kp F5       &kp F6          &kp F7   &kp F8     &kp F9     &kp F10    &kp F11 &kp F12
   &trans      &kp C_PREV    &kp C_NEXT   &kp C_VOL_DN &kp C_VOL_UP &kp C_PP        &kp LEFT &kp DOWN   &kp UP     &kp RIGHT  &trans  &kp DEL
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &kp HOME &kp PG_DN  &kp PG_UP  &kp END    &trans  &trans
                          	                        &trans   &kp LALT   &tp LC(LGUI)       &trans   &trans   &trans
                        >;
                };
        };
};